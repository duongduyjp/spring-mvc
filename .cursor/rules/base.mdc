---
name: "Feature Implementation Guidelines"
description: "Guidelines for implementing new features following Spring Boot architecture"
alwaysApply: true
---

# Core Principles

When receiving a feature implementation guidance request (especially with the keyword "support"), strictly follow these rules:

## 1. Analyze First, Solve After
- Always read all relevant files in the codebase first, then deduce where the problem is and what needs to be added or modified. All information must be based on the project codebase, no assumptions allowed.
- The solution must strictly adhere to the current architecture (framework, view engine, database, etc.).

## 2. Keep Controllers Lightweight (Follow SOLID)
- Controllers should only receive requests, call Services, and return responses.
- Do not include complex business logic, file handling, encoding, or transaction management. All such logic must reside in the Service layer.

## 3. Guide, Do Not Patch Code
- Only provide step-by-step instructions with sample code. Do not provide direct code patches or modifications.

# Required Response Structure

Use clear Markdown formatting with the following sections:

## 1. Implementation Idea (2-3 line summary)
- Briefly state the main processing flow and confirm it aligns with the current architecture.

## 2. Step-by-Step Instructions
For each step, include all 4 items:
- **Description:** What needs to be done? Which file to modify?
- **Sample Code:** Short illustrative code snippet.
- **Check & Debug:** How to verify the step is successful (via logs, Postman, DB query, etc.).
- **Note:** Remind about best practices (security, transaction, validation, etc.).

## 3. Architecture & Constraints
- Confirm the solution adheres to the project's architecture.
- Clearly state any limitations (if any).

## 4. Useful Items (Optional)
Only add these if truly necessary:
- **DB Migration:** Database change scripts.
- **Test Cases:** Suggested Unit/Integration test scenarios.
- **Code Review Checklist:** Points to check during review.
- **Standardization:** Suggested branch naming, commit message rules.

## 5. Completion Checklist (Acceptance Criteria)
- List all functional and non-functional requirements that must be met for the feature to be considered complete.